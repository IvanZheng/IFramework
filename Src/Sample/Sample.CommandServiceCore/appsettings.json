{
  "ConnectionStrings": {
    "SampleModelContext": "Server=(localdb)\\projects;Database=SampleModelContext.Core;Integrated Security=true;",
    "SampleModelContext.MySql": "server=127.0.0.1;Port=3306;uid=root;pwd=zhj777;database=SampleModelContext.Core",
    "SampleModelContext.MongoDb": "mongodb://10.100.7.46:9007/SampleModelContext?maxPoolSize=2000&connectTimeoutMS=60000&serverSelectionTimeout=60000&socketTimeout=60000"
  },
  "KafkaClientOptions": {
    "BrokerList": "10.100.7.46:9092"
  },
  "PathBase": "/core",
  "App": "CommandServiceCore",
  "Member:A": "ddd",
  "CommandTypeTemplate": "Sample.Command.{0}, Sample.Command",
  "urls": "http://localhost:29581/",
  "FrameworkConfiguration": {
    "handlers": [
      {
        "name": "ApplicationEventSubscriber",
        "sourceType": "Assembly",
        "source": "Sample.ApplicationEventSubscriber"
      },
      {
        "name": "DomainEventSubscriber",
        "sourceType": "Assembly",
        "source": "Sample.AsyncDomainEventSubscriber"
      },
      {
        "name": "BankDomainEventSubscriber",
        "sourceType": "Type",
        "source": "Sample.AsyncDomainEventSubscriber.Banks.TransactionProcessManager, Sample.AsyncDomainEventSubscriber"
      },
      {
        "name": "CommandHandlers",
        "sourceType": "Assembly",
        "source": "Sample.CommandHandler"
      },
      {
        "name": "BankAccountCommandHandlers",
        "sourceType": "Type",
        "source": "Sample.CommandHandler.Banks.AccountCommandHandler, Sample.CommandHandler"
      },
      {
        "name": "BankTransactionCommandHandlers",
        "sourceType": "Type",
        "source": "Sample.CommandHandler.Banks.TransactionCommandHandler, Sample.CommandHandler"
      }
    ]
  },
  "RedisEventStoreOptions": {
    "ConnectionString": "localhost:6379",
    "DatabaseName": -1,
    "AppendEventsLuaScript": "",
    "GetEventsLuaScript": "",
    "HandleEventLuaScript": ""
  },
  "RedisSnapshotStoreOptions": {
    "ConnectionString": "localhost:6379",
    "DatabaseName": -1
  },
  "Logging": {
    "IncludeScopes": true,
    "LogLevel": {
      "Default": "Warning",
      "System": "None",
      "Microsoft": "Warning"
    }
  },
  "Serilog": {
    "MinimumLevel": {
      "Default": "Debug"
    },
    "WriteTo": [
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "Logger",
              "Args": {
                "configureLogger": {
                  "Filter": [
                    {
                      "Name": "ByIncludingOnly",
                      "Args": {
                        "expression": "@Level = 'Information' or @Level = 'Debug'"
                      }
                    }
                  ],
                  "WriteTo": [
                    {
                      "Name": "File",
                      "Args": {
                        "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} {SourceContext} [{Level:w3}] {Message} Scope: {Properties:j}{NewLine}{Exception}{NewLine}",
                        "path": "log/sample_debug_.txt",
                        "rollingInterval": "Day"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      {
        "Name": "Async",
        "Args": {
          "configure": [
            {
              "Name": "File",
              "Args": {
                "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} {SourceContext} [{Level:w3}] {Message} Scope: {Properties:j}{NewLine}{Exception}{NewLine}",
                "path": "log/sample_error_.txt",
                "rollingInterval": "Day",
                "restrictedToMinimumLevel": "Warning"
              }
            }
          ]
        } 
      }
      //{
        //  "Name": "MSSqlServer",
        //  "Args": {
        //    "connectionString": "Server=(localdb)\\projects;Database=Ids.Application;Trusted_Connection=True;MultipleActiveResultSets=true",
        //    "tableName": "Log",
        //    "columnOptionsSection": {
        //      "addStandardColumns": [ "LogEvent" ],
        //      "removeStandardColumns": [ "Properties" ]
        //    }
        //  }
        //}
    ]
  }
}